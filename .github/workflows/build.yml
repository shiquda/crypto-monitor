name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # trigger when tag is vX.X.X

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
        env:
          GOPATH: ${{ github.workspace }}/go

      - name: Build Wails App
        run: |
          wails build -m release
        env:
          GOOS: ${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'darwin-latest' && 'darwin' || 'linux' }}
          GOARCH: "amd64"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: crypto-monitor-${{ matrix.os }}
          path: build/bin/crypto-monitor.${{ matrix.os == 'windows-latest' && 'exe' || matrix.os == 'darwin' && 'app' || 'linux' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: crypto-monitor-ubuntu-latest
          path: ./build

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: crypto-monitor-macos-latest
          path: ./build/macos

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: crypto-monitor-windows-latest
          path: ./build/windows

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows/crypto-monitor.exe
          asset_name: crypto-monitor-windows.exe
          asset_content_type: application/vnd.microsoft.package

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/macos/crypto-monitor.app
          asset_name: crypto-monitor-macos.app
          asset_content_type: application/x-apple-app

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ubuntu-latest/crypto-monitor
          asset_name: crypto-monitor-linux
          asset_content_type: application/octet-stream
